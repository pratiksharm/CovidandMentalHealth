{"ast":null,"code":"import { useState } from 'react';\n\nfunction useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (e) {\n      console.log(e);\n      return initialValue;\n    }\n  });\n\n  const setValue = value => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;","map":{"version":3,"sources":["D:/Web development/keeperapp/src/hooks/useLocalStorage.js"],"names":["useState","useLocalStorage","key","initialValue","storedValue","setStoredValue","item","window","localStorage","getItem","JSON","parse","e","console","log","setValue","value","valueToStore","Function","setItem","stringify"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,YAA9B,EAA4C;AACxC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,MAAM;AACjD,QAAI;AACA,YAAMM,IAAI,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BP,GAA5B,CAAb;AACA,aAAOI,IAAI,GAAGI,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAH,GAAsBH,YAAjC;AACH,KAHD,CAGE,OAAMS,CAAN,EAAS;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,aAAOT,YAAP;AACH;AACJ,GAR6C,CAA9C;;AASA,QAAMY,QAAQ,GAAIC,KAAD,IAAW;AACxB,QAAI;AACA,YAAMC,YAAY,GACdD,KAAK,YAAYE,QAAjB,GAA4BF,KAAK,CAACZ,WAAD,CAAjC,GAAiDY,KADrD;AAEAX,MAAAA,cAAc,CAACY,YAAD,CAAd;AACAV,MAAAA,MAAM,CAACC,YAAP,CAAoBW,OAApB,CAA4BjB,GAA5B,EAAiCQ,IAAI,CAACU,SAAL,CAAeH,YAAf,CAAjC;AACH,KALD,CAKE,OAAML,CAAN,EAAS;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ,GATD;;AAUA,SAAO,CAACR,WAAD,EAAcW,QAAd,CAAP;AACH;;AAED,eAAed,eAAf","sourcesContent":["import { useState } from 'react';\r\n\r\nfunction useLocalStorage(key, initialValue) {\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n        try {\r\n            const item = window.localStorage.getItem(key);\r\n            return item ? JSON.parse(item) : initialValue;\r\n        } catch(e) {\r\n            console.log(e);\r\n            return initialValue;\r\n        }\r\n    });\r\n    const setValue = (value) => {\r\n        try {\r\n            const valueToStore = \r\n                value instanceof Function ? value(storedValue) : value;\r\n            setStoredValue(valueToStore);\r\n            window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n    };\r\n    return [storedValue, setValue];\r\n}\r\n\r\nexport default useLocalStorage;"]},"metadata":{},"sourceType":"module"}