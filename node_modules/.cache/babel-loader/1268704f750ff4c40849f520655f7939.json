{"ast":null,"code":"import _objectWithoutProperties from\"D:\\\\Web development\\\\keeperapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";import React from'react';import Markdown from'markdown-to-jsx';import{useParams}from'react-router';import{Typography,withStyles,Link}from\"@material-ui/core\";var postsData=require(\"./posts.json\");function findPostBySlug(slug){return postsData.find(function(o){return o.slug===slug;});}var styles=function styles(theme){return{listItem:{marginTop:theme.spacing(1)}};};export default function Post(){var options={overrides:{h1:{component:function component(props){return/*#__PURE__*/React.createElement(Typography,Object.assign({gutterBottom:true,variant:\"h4\"},props));}},h2:{component:function component(props){return/*#__PURE__*/React.createElement(Typography,Object.assign({gutterBottom:true,variant:\"h6\"},props));}},h3:{component:function component(props){return/*#__PURE__*/React.createElement(Typography,Object.assign({gutterBottom:true,variant:\"subtitle1\"},props));}},h4:{component:function component(props){return/*#__PURE__*/React.createElement(Typography,Object.assign({gutterBottom:true,variant:\"caption\",paragraph:true},props));}},p:{component:function component(props){return/*#__PURE__*/React.createElement(Typography,Object.assign({paragraph:true},props));}},a:{component:Link},li:{component:withStyles(styles)(function(_ref){var classes=_ref.classes,props=_objectWithoutProperties(_ref,[\"classes\"]);return/*#__PURE__*/React.createElement(\"li\",{className:classes.listItem},/*#__PURE__*/React.createElement(Typography,Object.assign({component:\"span\"},props)));})}}};var _useParams=useParams(),slug=_useParams.slug,post=findPostBySlug(slug);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",{className:\"title\"},post.title),/*#__PURE__*/React.createElement(Markdown,{options:options},post.content));}","map":{"version":3,"sources":["D:/Web development/keeperapp/src/components/Post.js"],"names":["React","Markdown","useParams","Typography","withStyles","Link","postsData","require","findPostBySlug","slug","find","o","styles","theme","listItem","marginTop","spacing","Post","options","overrides","h1","component","props","h2","h3","h4","p","a","li","classes","post","title","content"],"mappings":"8KAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,iBAArB,CACA,OAASC,SAAT,KAA0B,cAA1B,CACA,OAAQC,UAAR,CAAoBC,UAApB,CAAgCC,IAAhC,KAA2C,mBAA3C,CAEA,GAAMC,CAAAA,SAAS,CAAGC,OAAO,CAAC,cAAD,CAAzB,CAGA,QAASC,CAAAA,cAAT,CAAwBC,IAAxB,CAA8B,CAC1B,MAAOH,CAAAA,SAAS,CAACI,IAAV,CAAe,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACF,IAAF,GAAWA,IAAf,EAAhB,CAAP,CACH,CAED,GAAMG,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,QAAK,CACrBC,QAAQ,CAAE,CACRC,SAAS,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH,CADW,CAAL,EAApB,CAKA,cAAe,SAASC,CAAAA,IAAT,EAAgB,CAC3B,GAAMC,CAAAA,OAAO,CAAG,CACZC,SAAS,CAAE,CACTC,EAAE,CAAE,CAAEC,SAAS,CAAE,mBAAAC,KAAK,qBAAI,oBAAC,UAAD,gBAAY,YAAY,KAAxB,CAAyB,OAAO,CAAC,IAAjC,EAA0CA,KAA1C,EAAJ,EAAlB,CADK,CAETC,EAAE,CAAE,CAAEF,SAAS,CAAE,mBAAAC,KAAK,qBAAI,oBAAC,UAAD,gBAAY,YAAY,KAAxB,CAAyB,OAAO,CAAC,IAAjC,EAA0CA,KAA1C,EAAJ,EAAlB,CAFK,CAGTE,EAAE,CAAE,CAAEH,SAAS,CAAE,mBAAAC,KAAK,qBAAI,oBAAC,UAAD,gBAAY,YAAY,KAAxB,CAAyB,OAAO,CAAC,WAAjC,EAAiDA,KAAjD,EAAJ,EAAlB,CAHK,CAITG,EAAE,CAAE,CAAEJ,SAAS,CAAE,mBAAAC,KAAK,qBAAI,oBAAC,UAAD,gBAAY,YAAY,KAAxB,CAAyB,OAAO,CAAC,SAAjC,CAA2C,SAAS,KAApD,EAAyDA,KAAzD,EAAJ,EAAlB,CAJK,CAKTI,CAAC,CAAE,CAAEL,SAAS,CAAE,mBAAAC,KAAK,qBAAI,oBAAC,UAAD,gBAAY,SAAS,KAArB,EAA0BA,KAA1B,EAAJ,EAAlB,CALM,CAMTK,CAAC,CAAE,CAAEN,SAAS,CAAEhB,IAAb,CANM,CAOTuB,EAAE,CAAE,CACFP,SAAS,CAAEjB,UAAU,CAACQ,MAAD,CAAV,CAAmB,kBAAGiB,CAAAA,OAAH,MAAGA,OAAH,CAAeP,KAAf,+DAC5B,0BAAI,SAAS,CAAEO,OAAO,CAACf,QAAvB,eACE,oBAAC,UAAD,gBAAY,SAAS,CAAC,MAAtB,EAAiCQ,KAAjC,EADF,CAD4B,EAAnB,CADT,CAPK,CADC,CAAhB,CAD2B,eAkBZpB,SAAS,EAlBG,CAkBrBO,IAlBqB,YAkBrBA,IAlBqB,CAmB3BqB,IAnB2B,CAmBpBtB,cAAc,CAACC,IAAD,CAnBM,CAoB3B,mBACI,4CACI,0BAAI,SAAS,CAAC,OAAd,EAAuBqB,IAAI,CAACC,KAA5B,CADJ,cAEI,oBAAC,QAAD,EAAU,OAAO,CAAEb,OAAnB,EAA6BY,IAAI,CAACE,OAAlC,CAFJ,CADJ,CAMH","sourcesContent":["import React from 'react';\r\nimport Markdown from 'markdown-to-jsx'\r\nimport { useParams } from 'react-router';\r\nimport {Typography, withStyles, Link} from \"@material-ui/core\"\r\n\r\nconst postsData = require(\"./posts.json\");\r\n\r\n\r\nfunction findPostBySlug(slug) {\r\n    return postsData.find(o => o.slug === slug);\r\n} \r\n\r\nconst styles = theme => ({\r\n    listItem: {\r\n      marginTop: theme.spacing(1),\r\n    }\r\n})\r\nexport default function Post() {\r\n    const options = { \r\n        overrides: { \r\n          h1: { component: props => <Typography gutterBottom variant=\"h4\" {...props} /> }, \r\n          h2: { component: props => <Typography gutterBottom variant=\"h6\" {...props} /> }, \r\n          h3: { component: props => <Typography gutterBottom variant=\"subtitle1\" {...props} /> }, \r\n          h4: { component: props => <Typography gutterBottom variant=\"caption\" paragraph {...props} /> }, \r\n          p: { component: props => <Typography paragraph {...props} /> }, \r\n          a: { component: Link }, \r\n          li: { \r\n            component: withStyles(styles)(({ classes, ...props }) => ( \r\n              <li className={classes.listItem}> \r\n                <Typography component=\"span\" {...props} /> \r\n              </li> \r\n            )), \r\n          }, \r\n        }, \r\n      }; \r\n    var { slug } = useParams(),\r\n    post = findPostBySlug(slug);\r\n    return(\r\n        <div >\r\n            <h1 className=\"title\">{post.title}</h1>\r\n            <Markdown options={options}>{post.content}</Markdown>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}