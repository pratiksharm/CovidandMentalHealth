{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web development\\\\keeperapp\\\\src\\\\components\\\\Post.js\";\nimport React from 'react';\nimport Markdown from 'markdown-to-jsx';\nimport { useParams } from 'react-router';\nimport { Typography, withStyles, Link } from \"@material-ui/core\";\n\nconst postsData = require(\"./posts.json\");\n\nfunction findPostBySlug(slug) {\n  return postsData.find(o => o.slug === slug);\n}\n\nexport default function Post() {\n  const options = {\n    overrides: {\n      h1: {\n        component: props => /*#__PURE__*/React.createElement(Typography, Object.assign({\n          gutterBottom: true,\n          variant: \"h4\"\n        }, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 37\n          }\n        }))\n      },\n      h2: {\n        component: props => /*#__PURE__*/React.createElement(Typography, Object.assign({\n          gutterBottom: true,\n          variant: \"h6\"\n        }, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 37\n          }\n        }))\n      },\n      h3: {\n        component: props => /*#__PURE__*/React.createElement(Typography, Object.assign({\n          gutterBottom: true,\n          variant: \"subtitle1\"\n        }, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 37\n          }\n        }))\n      },\n      h4: {\n        component: props => /*#__PURE__*/React.createElement(Typography, Object.assign({\n          gutterBottom: true,\n          variant: \"caption\",\n          paragraph: true\n        }, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 37\n          }\n        }))\n      },\n      p: {\n        component: props => /*#__PURE__*/React.createElement(Typography, Object.assign({\n          paragraph: true\n        }, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 36\n          }\n        }))\n      },\n      a: {\n        component: Link\n      },\n      li: {\n        component: withStyles(styles)(({\n          classes,\n          ...props\n        }) => /*#__PURE__*/React.createElement(\"li\", {\n          className: classes.listItem,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Typography, Object.assign({\n          component: \"span\"\n        }, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }\n        }))))\n      }\n    }\n  };\n  var {\n    slug\n  } = useParams(),\n      post = findPostBySlug(slug);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, post.title), /*#__PURE__*/React.createElement(Markdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, post.content));\n}","map":{"version":3,"sources":["D:/Web development/keeperapp/src/components/Post.js"],"names":["React","Markdown","useParams","Typography","withStyles","Link","postsData","require","findPostBySlug","slug","find","o","Post","options","overrides","h1","component","props","h2","h3","h4","p","a","li","styles","classes","listItem","post","title","content"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAAQC,UAAR,EAAoBC,UAApB,EAAgCC,IAAhC,QAA2C,mBAA3C;;AAEA,MAAMC,SAAS,GAAGC,OAAO,CAAC,cAAD,CAAzB;;AAGA,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC1B,SAAOH,SAAS,CAACI,IAAV,CAAeC,CAAC,IAAIA,CAAC,CAACF,IAAF,KAAWA,IAA/B,CAAP;AACH;;AAED,eAAe,SAASG,IAAT,GAAgB;AAC3B,QAAMC,OAAO,GAAG;AACZC,IAAAA,SAAS,EAAE;AACTC,MAAAA,EAAE,EAAE;AAAEC,QAAAA,SAAS,EAAEC,KAAK,iBAAI,oBAAC,UAAD;AAAY,UAAA,YAAY,MAAxB;AAAyB,UAAA,OAAO,EAAC;AAAjC,WAA0CA,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAtB,OADK;AAETC,MAAAA,EAAE,EAAE;AAAEF,QAAAA,SAAS,EAAEC,KAAK,iBAAI,oBAAC,UAAD;AAAY,UAAA,YAAY,MAAxB;AAAyB,UAAA,OAAO,EAAC;AAAjC,WAA0CA,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAtB,OAFK;AAGTE,MAAAA,EAAE,EAAE;AAAEH,QAAAA,SAAS,EAAEC,KAAK,iBAAI,oBAAC,UAAD;AAAY,UAAA,YAAY,MAAxB;AAAyB,UAAA,OAAO,EAAC;AAAjC,WAAiDA,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAtB,OAHK;AAITG,MAAAA,EAAE,EAAE;AAAEJ,QAAAA,SAAS,EAAEC,KAAK,iBAAI,oBAAC,UAAD;AAAY,UAAA,YAAY,MAAxB;AAAyB,UAAA,OAAO,EAAC,SAAjC;AAA2C,UAAA,SAAS;AAApD,WAAyDA,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAtB,OAJK;AAKTI,MAAAA,CAAC,EAAE;AAAEL,QAAAA,SAAS,EAAEC,KAAK,iBAAI,oBAAC,UAAD;AAAY,UAAA,SAAS;AAArB,WAA0BA,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAtB,OALM;AAMTK,MAAAA,CAAC,EAAE;AAAEN,QAAAA,SAAS,EAAEX;AAAb,OANM;AAOTkB,MAAAA,EAAE,EAAE;AACFP,QAAAA,SAAS,EAAEZ,UAAU,CAACoB,MAAD,CAAV,CAAmB,CAAC;AAAEC,UAAAA,OAAF;AAAW,aAAGR;AAAd,SAAD,kBAC5B;AAAI,UAAA,SAAS,EAAEQ,OAAO,CAACC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,UAAD;AAAY,UAAA,SAAS,EAAC;AAAtB,WAAiCT,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CADS;AADT;AAPK;AADC,GAAhB;AAiBA,MAAI;AAAER,IAAAA;AAAF,MAAWP,SAAS,EAAxB;AAAA,MACAyB,IAAI,GAAGnB,cAAc,CAACC,IAAD,CADrB;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBkB,IAAI,CAACC,KAA5B,CADJ,eAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWD,IAAI,CAACE,OAAhB,CAFJ,CADJ;AAMH","sourcesContent":["import React from 'react';\r\nimport Markdown from 'markdown-to-jsx'\r\nimport { useParams } from 'react-router';\r\nimport {Typography, withStyles, Link} from \"@material-ui/core\"\r\n\r\nconst postsData = require(\"./posts.json\");\r\n\r\n\r\nfunction findPostBySlug(slug) {\r\n    return postsData.find(o => o.slug === slug);\r\n} \r\n\r\nexport default function Post() {\r\n    const options = { \r\n        overrides: { \r\n          h1: { component: props => <Typography gutterBottom variant=\"h4\" {...props} /> }, \r\n          h2: { component: props => <Typography gutterBottom variant=\"h6\" {...props} /> }, \r\n          h3: { component: props => <Typography gutterBottom variant=\"subtitle1\" {...props} /> }, \r\n          h4: { component: props => <Typography gutterBottom variant=\"caption\" paragraph {...props} /> }, \r\n          p: { component: props => <Typography paragraph {...props} /> }, \r\n          a: { component: Link }, \r\n          li: { \r\n            component: withStyles(styles)(({ classes, ...props }) => ( \r\n              <li className={classes.listItem}> \r\n                <Typography component=\"span\" {...props} /> \r\n              </li> \r\n            )), \r\n          }, \r\n        }, \r\n      }; \r\n    var { slug } = useParams(),\r\n    post = findPostBySlug(slug);\r\n    return(\r\n        <div >\r\n            <h1 className=\"title\">{post.title}</h1>\r\n            <Markdown>{post.content}</Markdown>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}